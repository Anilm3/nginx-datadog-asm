cmake_minimum_required(VERSION 3.7)

# TODO: document

# TODO
# set(CMAKE_OSX_SYSROOT /)

project(ngx_http_opentracing_module)

# The C code doesn't care about the C++ version.
# opentracing-cpp works with C++11 or newer.
# dd-opentracing-cpp works with C++14 or newer.
set(CMAKE_CXX_STANDARD 14)

# TODO: brew osx pcre weirdness
# include_directories(AFTER SYSTEM /usr/local/include)

# Nginx module boilerplate (code within the nginx repository)
include(./nginx-module.cmake)

# The nginx-opentracing nginx module sources
include(./nginx-opentracing.cmake)

# The opentracing-cpp library sources
add_subdirectory(./opentracing-cpp EXCLUDE_FROM_ALL)

# The dd-opentracing-cpp library sources
# TODO: Build targets have conflicting names
# TODO: Need to use IMPORT or something
SET(BUILD_OBJECT ON CACHE BOOL "Build dd-opentracing-cpp objects")
SET(BUILD_SHARED OFF CACHE BOOL "Don't build dd-opentracing-cpp shared library")
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/dd-opentracing-cpp/3rd_party/sanitizers-cmake" ${CMAKE_MODULE_PATH})
# TODO: nope SET(CMAKE_LIBRARY_PATH dd-opentracing-cpp/deps/lib CACHE STRING "override where dd-opentracing-cpp looks for built libraries")
# In addition to the opentracing-cpp header files, we also need to make visible
# header files generated by the opentracing-cpp build (version.h, config.h).
include_directories(opentracing-cpp/include)
include_directories(${CMAKE_CURRENT_BINARY_DIR}/opentracing-cpp/include)
include_directories(opentracing-cpp/3rd_party/include)
add_subdirectory(./dd-opentracing-cpp EXCLUDE_FROM_ALL)

add_library(ngx_http_opentracing_module SHARED)
target_sources(ngx_http_opentracing_module
    PRIVATE
        $<TARGET_OBJECTS:nginx_module>
        $<TARGET_OBJECTS:nginx_opentracing>
        $<TARGET_OBJECTS:opentracing-object>
        $<TARGET_OBJECTS:dd_opentracing-object>
)

add_dependencies(ngx_http_opentracing_module 
    nginx_module 
    nginx_opentracing 
    opentracing-object
    dd_opentracing-object
)

target_link_libraries(ngx_http_opentracing_module dd_opentracing-object)
