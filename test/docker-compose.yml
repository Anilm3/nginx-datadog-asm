version: "3.2"
services:
    
  # `nginx` is the service that loads the Datadog module and is sent requests
  # to probe the module's behavior.
  nginx:
    build:
      context: ./services/nginx
      dockerfile: ./Dockerfile
      args:
        NGINX_IMAGE: ${NGINX_IMAGE}
    environment:
      - DD_ENV=prod
      - DD_AGENT_HOST=agent
      - DD_SERVICE=nginx
    ports:
      - "0:80" # HTTP/1.1
      - "0:8080" # alternative HTTP/1.1, for testing environment variables
      - "0:1337" # HTTP/2 for gRPC
    depends_on:
      - http
      - fastcgi
      - grpc
      - agent

  # `agent` is a mock trace agent.  It listens on port 8126, accepts msgpack,
  # decodes the resulting traces. and prints them to standard output as JSON.
  # The tests can inspect traces sent to the agent (e.g. from the nginx module)
  # by looking at `agent` log lines in the output of `docker-compose up`.
  agent:
    build:
      context: ./services/agent
      dockerfile: ./Dockerfile
    ports:
      - "0:8888" # for synchronizing with log
    volumes:
      - './services/agent/agent.js:/opt/app/agent.js:ro'

  # `http` is an HTTP server that is reverse proxied by `nginx`.  It listens
  # on port 8080 and responds with a JSON object containing the name of
  # the service ("http") and the request's HTTP headers.  This way, tests can
  # see which trace context, if any, was propagated to the reverse proxied
  # server.
  http:
    build:
      context: ./services/http
      dockerfile: ./Dockerfile
    environment:
      - DD_ENV=prod
      - DD_AGENT_HOST=agent
      - DD_SERVICE=http
    volumes:
      - './services/http/http.js:/opt/app/http.js:ro'
    depends_on:
      - agent

  # `fastcgi` is a FastCGI server that is reverse proxied by `nginx`.  It
  # listens on port 8080 and responds with a JSON object containing the name of
  # the service ("fastcgi") and the request's headers.  This way, tests can see
  # which trace context, if any, was propagated to the reverse proxied server.
  fastcgi:
    build:
      context: ./services/fastcgi
      dockerfile: ./Dockerfile
    environment:
      - DD_ENV=prod
      - DD_AGENT_HOST=agent
      - DD_SERVICE=fastcgi
    volumes:
      - './services/fastcgi/fastcgi.js:/opt/app/fastcgi.js:ro'
    depends_on:
      - agent

  # `grpc` is a gRPC server that is reverse proxied by `nginx`.  It
  # listens on port 1337 and responds with a message containing the metadata
  # sent with the request.  This way, tests can see
  # which trace context, if any, was propagated to the reverse proxied server.
  # gRPC requests are made to nginx using `grpcurl`, which is included in the
  # `nginx` container image.
  grpc:
    build:
      context: ./services/grpc
      dockerfile: ./Dockerfile
    environment:
      - DD_ENV=prod
      - DD_AGENT_HOST=agent
      - DD_SERVICE=grpc
    volumes:
      - './services/grpc/grpc.js:/opt/app/grpc.js:ro'
      - './services/grpc/grpc.proto:/opt/app/grpc.proto:ro'
    depends_on:
      - agent
